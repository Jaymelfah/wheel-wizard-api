---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/cars":
    get:
      summary: list cars
      tags:
      - Cars
      description: list of cars
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example_0:
                  value:
                  - id: 1
                    name: Car 1
                    model: Model A
                    year: '2020-02-02'
                    description: luxury
                    test_drive_fee: 55
                    price: 5000
                  - id: 2
                    name: Car 2
                    model: Model B
                    year: '2020-02-02'
                    description: luxury
                    test_drive_fee: 55
                    price: 8000
                  - id: 3
                    name: Car 3
                    model: Model C
                    year: '2020-02-02'
                    description: luxury
                    test_drive_fee: 55
                    price: 3000
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    model:
                      type: string
                    year:
                      type: string
                      format: date
                    description:
                      type: string
                    test_drive_fee:
                      type: number
                      format: float
                    price:
                      type: number
                      format: float
                  required:
                  - id
                  - name
                  - model
                  - year
                  - description
                  - test_drive_fee
                  - price
    post:
      summary: create car
      tags:
      - Cars
      description: Create a car
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                test_drive_fee:
                  type: number
                model:
                  type: string
                year:
                  type: integer
              required:
              - name
              - description
              - price
              - model
              - year
  "/api/v1/cars/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show car
      tags:
      - Cars
      description: Display a particular car with id
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example_0:
                  value:
                  - id: 1
                    name: Car 1
                    model: Model A
                    year: '2020-02-02'
                    description: luxury
                    test_drive_fee: 55
                    price: 5000
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    model:
                      type: string
                    year:
                      type: string
                      format: date
                    description:
                      type: string
                    test_drive_fee:
                      type: number
                      format: float
                    price:
                      type: number
                      format: float
                  required:
                  - id
                  - name
                  - model
                  - year
                  - description
                  - test_drive_fee
                  - price
    delete:
      summary: delete car
      tags:
      - Cars
      description: Delete a Car with a particular id
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example_0:
                  value:
                    id: 1
                    message: Car was successfully deleted
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  message:
                    type: string
  "/api/v1/reservations":
    get:
      summary: list reservations
      responses:
        '200':
          description: successful
    post:
      summary: create reservation
      responses:
        '200':
          description: successful
  "/api/v1/reservations/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show reservation
      responses:
        '200':
          description: successful
    delete:
      summary: delete reservation
      responses:
        '200':
          description: successful
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
